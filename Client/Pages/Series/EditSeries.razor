@page "/EditSeries/{seriesId}"
@inject HttpClient Http
@inject NavigationManager NavManager

<h2>Edit Series</h2>

@if (currentSeries != null)
{
    <MatCard>
        <MatCardContent>
            <MatBlazor.MatHeadline6>@currentSeries.Name</MatBlazor.MatHeadline6>
            <MatSubtitle2>@currentSeries.Tiers.Count Tiers</MatSubtitle2>
            <MatBody1>@currentSeries.Description</MatBody1>
        </MatCardContent>
    </MatCard>

    @foreach (var tier in currentSeries.Tiers)
    {
        <MatCard>
            <MatCardContent>
                <MatBlazor.MatHeadline6>@tier.Name</MatBlazor.MatHeadline6>
                <MatSubtitle1>@tier.NumberToBeSelectedFromTier Tracks to be picked from a pool of @tier.Tracks.Count</MatSubtitle1>
                <MatBody1>
                    <ul>
                        @foreach (var track in tier.Tracks)
                        {
                            <li>@track.Name</li>
                        }
                    </ul>
                </MatBody1>
            </MatCardContent>
        </MatCard>
    }
    <MatButton @onclick="AddTier">Add a new Tier</MatButton>
}

@code {
    [Parameter]
    public string SeriesId { get; set; }
    private SeriesViewModel currentSeries;

    protected override async Task OnInitializedAsync()
    {
        await GetCurrentSeries();
    }

    private async Task GetCurrentSeries()
    {
        try
        {
            currentSeries = await Http.GetFromJsonAsync<SeriesViewModel>($"/api/Series/GetById/{SeriesId}");
        }
        catch (Exception ex)
        {
            currentSeries = null;
            Console.WriteLine(ex.ToString());
        }
    }

    private void AddTier()
    {
        currentSeries.Tiers.Add(new TierViewModel
        {
            Name = $"Tier {currentSeries.Tiers.Count + 1}",
            NumberToBeSelectedFromTier = 3,
            Tracks = new List<TrackViewModel>()
        });

            try
            {
                Http.PostAsJsonAsync("/api/Series/Update", currentSeries);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
    }
}
