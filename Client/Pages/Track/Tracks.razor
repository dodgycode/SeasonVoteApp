@page "/tracks"
@using SeasonVoting.Shared
@inject HttpClient Http


<h2>Tracks</h2>

@if (tracks != null)
{
    foreach (var track in tracks)
    {
        <MatCard>
            <MatCardContent>
                <MatBlazor.MatHeadline6>@track.Name</MatBlazor.MatHeadline6>
                <MatSubtitle1>@track.Availability</MatSubtitle1>
                <MatSubtitle2>@track.NumberOfVariants layouts</MatSubtitle2>
            </MatCardContent>
            <MatCardActions>
                <MatButton href="@track.Url">View Details</MatButton>
            </MatCardActions>
        </MatCard>
    }
}
else
{
    <h1>No tracks exist</h1>
}



@code {
    private TrackViewModel[] tracks;

    protected override async Task OnInitializedAsync()
    {
        await GetTracks();
    }

    private async Task GetTracks()
    {

        try
        {
            tracks = await Http.GetFromJsonAsync<TrackViewModel[]>("/api/GetAllTracks");
        }
        catch (Exception ex)
        {
            tracks = null;
            Console.WriteLine(ex.ToString());
        }
    }
}
