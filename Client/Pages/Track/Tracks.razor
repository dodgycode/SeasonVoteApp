@page "/tracks"
@using SeasonVoting.Shared
@inject HttpClient Http


<h2>Tracks</h2>
@if (hasLoaded)
{@if (tracks != null)
    {
        foreach (var track in tracks)
        {
            <MatCard>
                <MatCardContent>
                    <MatBlazor.MatHeadline6>@track.Name</MatBlazor.MatHeadline6>
                    <MatSubtitle1>@track.Availability</MatSubtitle1>
                    <MatSubtitle2>@track.NumberOfVariants layouts</MatSubtitle2>
                </MatCardContent>
            </MatCard>
        }
    }
    else
    {
        <h1>No tracks exist</h1>
    }
}
else
{
<MatProgressCircle Indeterminate="true" Size="MatProgressCircleSize.Medium" />
}




@code {
    private TrackViewModel[] tracks;
    private bool hasLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await GetTracks();
    }

    private async Task GetTracks()
    {

        try
        {
            tracks = await Http.GetFromJsonAsync<TrackViewModel[]>("/api/Tracks/GetAll");
        }
        catch (Exception ex)
        {
            tracks = null;
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            hasLoaded = true;
        }
    }
}
