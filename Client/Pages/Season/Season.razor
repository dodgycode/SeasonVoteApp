@page "/season"
@inject HttpClient Http

<h2>Current Season</h2>
@if (hasLoaded)
{
    @if (currentSeason != null)
    {
        <p>Current Season is @currentSeason.Name</p>
        <MatButton Raised="true" @onclick="CompleteSeason">Complete Season</MatButton>
    }
    else
    {
        <p>No season is currently active</p>
        <MatButtonLink href="addseason">Add a new Season</MatButtonLink>
    }
}
else
{
    <MatProgressCircle Indeterminate="true" Size="MatProgressCircleSize.Medium" />
}


@code {
    private SeasonViewModel currentSeason;
    private bool hasLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        await GetCurrentSeason();
    }

    private async Task CompleteSeason()
    {
        try
        {
            await Http.PostAsJsonAsync("/api/CompleteCurrentSeason", currentSeason.Id);
            await GetCurrentSeason();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private async Task GetCurrentSeason()
    {

        try
        {
            currentSeason = await Http.GetFromJsonAsync<SeasonViewModel>("/api/GetCurrentSeason");
        }
        catch (Exception ex)
        {
            currentSeason = null;
            Console.WriteLine(ex.ToString());
        }
        finally
        {
            hasLoaded = true;
        }
    }

}
