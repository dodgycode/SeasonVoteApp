@page "/season"
@using SeasonVoting.Shared
@inject HttpClient Http



@if (currentSeason != null)
{
    <h1>Current Season is @currentSeason.Name</h1>
    <p>Do you want to close the current season?</p>
    <MatButton class="btn btn-primary" Raised="true" @onclick="CompleteSeason">Complete Season</MatButton>
}
else
{
    <h1>No season is currently active</h1>

    <a href="addseason">Add a new Season</a>
}



@code {
    private SeasonViewModel currentSeason;

    protected override async Task OnInitializedAsync()
    {
        await GetCurrentSeason();
    }

    private async Task CompleteSeason()
    {
        try
        {
            await Http.PostAsJsonAsync("/api/CompleteCurrentSeason", currentSeason.Id);
            await GetCurrentSeason();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    private async Task GetCurrentSeason()
    {

        try
        {
            currentSeason = await Http.GetFromJsonAsync<SeasonViewModel>("/api/GetCurrentSeason");
        }
        catch (Exception ex)
        {
            currentSeason = null;
            Console.WriteLine(ex.ToString());
        }
    }
}
